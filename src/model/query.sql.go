// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package model

import (
	"context"
	"time"
)

const getLatestLogs = `-- name: GetLatestLogs :many
SELECT id, timestamp, status, loss_rate FROM ping_log
ORDER BY timestamp DESC
LIMIT 10
`

func (q *Queries) GetLatestLogs(ctx context.Context) ([]PingLog, error) {
	rows, err := q.db.QueryContext(ctx, getLatestLogs)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []PingLog
	for rows.Next() {
		var i PingLog
		if err := rows.Scan(
			&i.ID,
			&i.Timestamp,
			&i.Status,
			&i.LossRate,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertPingLog = `-- name: InsertPingLog :exec
INSERT INTO ping_log (timestamp, status, loss_rate)
VALUES (?, ?, ?)
`

type InsertPingLogParams struct {
	Timestamp time.Time
	Status    bool
	LossRate  float64
}

func (q *Queries) InsertPingLog(ctx context.Context, arg InsertPingLogParams) error {
	_, err := q.db.ExecContext(ctx, insertPingLog, arg.Timestamp, arg.Status, arg.LossRate)
	return err
}
